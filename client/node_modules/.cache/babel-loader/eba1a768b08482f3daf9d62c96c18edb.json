{"ast":null,"code":"var _jsxFileName = \"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/pages/SearchBooks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport { useMutation } from '@apollo/client';\nimport { SAVE_BOOK } from '../utils/mutations';\nimport { searchGoogleBooks } from '../utils/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchBooks = () => {\n  _s();\n\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]); // create state for holding our search field data\n\n  const [searchInput, setSearchInput] = useState(''); // create state to hold saved bookId values\n\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n  const [saveBook, {\n    error\n  }] = useMutation(SAVE_BOOK); // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  }); // create method to search for books and set state on form submit\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const {\n        items\n      } = await response.json();\n      const bookData = items.map(book => {\n        var _book$volumeInfo$imag;\n\n        return {\n          bookId: book.id,\n          authors: book.volumeInfo.authors || ['No author to display'],\n          title: book.volumeInfo.title,\n          description: book.volumeInfo.description,\n          image: ((_book$volumeInfo$imag = book.volumeInfo.imageLinks) === null || _book$volumeInfo$imag === void 0 ? void 0 : _book$volumeInfo$imag.thumbnail) || ''\n        };\n      });\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(error);\n    }\n  }; // create function to handle saving a book to our database\n\n\n  const handleSaveBook = async bookId => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find(book => book.bookId === bookId); // get token\n\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBook(bookToSave, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      } // if book successfully saves to user's account, save book id to state\n\n\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Search for Books!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleFormSubmit,\n          children: /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"searchInput\",\n                value: searchInput,\n                onChange: e => setSearchInput(e.target.value),\n                type: \"text\",\n                size: \"lg\",\n                placeholder: \"Search for a book\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"success\",\n                size: \"lg\",\n                children: \"Submit Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: searchedBooks.length ? `Viewing ${searchedBooks.length} results:` : 'Search for a book to begin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: searchedBooks.map(book => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: book.image,\n              alt: `The cover for ${book.title}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: [\"Authors: \", book.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: book.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), Auth.loggedIn() && /*#__PURE__*/_jsxDEV(Button, {\n                disabled: savedBookIds === null || savedBookIds === void 0 ? void 0 : savedBookIds.some(savedBookId => savedBookId === book.bookId),\n                className: \"btn-block btn-info\",\n                onClick: () => handleSaveBook(book.bookId),\n                children: savedBookIds !== null && savedBookIds !== void 0 && savedBookIds.some(savedBookId => savedBookId === book.bookId) ? 'This book has already been saved!' : 'Save this Book!'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, book.bookId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchBooks, \"CLefhZU9CbRq9/kZDZWCw9TaswU=\", false, function () {\n  return [useMutation];\n});\n\n_c = SearchBooks;\nexport default SearchBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"names":["React","useState","useEffect","Jumbotron","Container","Col","Form","Button","Card","CardColumns","Auth","saveBookIds","getSavedBookIds","useMutation","SAVE_BOOK","searchGoogleBooks","SearchBooks","searchedBooks","setSearchedBooks","searchInput","setSearchInput","savedBookIds","setSavedBookIds","saveBook","error","handleFormSubmit","event","preventDefault","response","ok","Error","items","json","bookData","map","book","bookId","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","err","console","handleSaveBook","bookToSave","find","token","loggedIn","getToken","e","target","value","length","some","savedBookId"],"sources":["/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/pages/SearchBooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport { useMutation } from '@apollo/client';\nimport { SAVE_BOOK } from '../utils/mutations';\nimport { searchGoogleBooks } from '../utils/API';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(error);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBook(bookToSave, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}