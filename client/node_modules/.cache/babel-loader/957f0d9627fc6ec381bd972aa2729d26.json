{"ast":null,"code":"var _jsxFileName = \"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/pages/SavedBooks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\nimport { removeBookId } from '../utils/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SavedBooks = () => {\n  _s();\n\n  const [removeBook, {\n    mutationData,\n    mutationError\n  }] = useMutation(REMOVE_BOOK);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ME);\n  const user = (data === null || data === void 0 ? void 0 : data.me) || (data === null || data === void 0 ? void 0 : data.user) || {};\n  const [userState, setUserState] = useState({ ...user\n  });\n  const userData = userState.savedBooks ? userState : user; // create function that accepts the book's mongo _id value as param and deletes the book from the database\n\n  async function handleDeleteBook(bookId) {\n    try {\n      const response = await removeBook({\n        variables: {\n          bookId: bookId\n        }\n      });\n      setUserState({ ...response.data.removeBook\n      }); // update state\n\n      removeBookId(bookId); // update local storage\n    } catch (err) {\n      console.error(err);\n    } // upon success, remove book's id from localStorage\n    // if data isn't here yet, say so\n\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved books!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:` : 'You have no saved books!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: userData.savedBooks.map(book => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: book.image,\n              alt: `The cover for ${book.title}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 31\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: [\"Authors: \", book.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: book.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteBook(book.bookId),\n                children: \"Delete this Book!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, book.bookId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SavedBooks, \"KjExBMNr7D4xN4ksepOVQwV74z0=\", false, function () {\n  return [useMutation, useQuery];\n});\n\n_c = SavedBooks;\nexport default SavedBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedBooks\");","map":{"version":3,"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","useQuery","useMutation","GET_ME","REMOVE_BOOK","removeBookId","SavedBooks","removeBook","mutationData","mutationError","loading","error","data","user","me","userState","setUserState","userData","savedBooks","handleDeleteBook","bookId","response","variables","err","console","length","map","book","image","title","authors","description"],"sources":["/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/pages/SavedBooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  const [removeBook, { mutationData, mutationError }] = useMutation(REMOVE_BOOK);\n  const { loading, error, data } = useQuery(GET_ME);\n  const user = data?.me || data?.user || {};\n  const [userState, setUserState] = useState({...user});\n  const userData = userState.savedBooks ? userState : user;\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  async function handleDeleteBook(bookId) {\n    try {\n      const response = await removeBook({ variables: { bookId: bookId } });\n  \n    setUserState({ ...response.data.removeBook }); // update state\n    removeBookId(bookId); // update local storage\n  } catch (err) {\n    console.error(err);\n  } // upon success, remove book's id from localStorage\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}