[{"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/index.js":"1","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/App.js":"2","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/pages/SavedBooks.js":"3","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/pages/SearchBooks.js":"4","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/components/Navbar.js":"5","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/components/SignupForm.js":"6","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/components/LoginForm.js":"7","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/auth.js":"8","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/localStorage.js":"9","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/mutations.js":"10","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/API.js":"11","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/queries.js":"12"},{"size":266,"mtime":1652547484000,"results":"13","hashOfConfig":"14"},{"size":961,"mtime":1654023661778,"results":"15","hashOfConfig":"14"},{"size":2444,"mtime":1654190979329,"results":"16","hashOfConfig":"14"},{"size":4806,"mtime":1654115194457,"results":"17","hashOfConfig":"14"},{"size":2524,"mtime":1652547484000,"results":"18","hashOfConfig":"14"},{"size":3146,"mtime":1654648549077,"results":"19","hashOfConfig":"14"},{"size":2628,"mtime":1654556660982,"results":"20","hashOfConfig":"14"},{"size":1274,"mtime":1654188231596,"results":"21","hashOfConfig":"14"},{"size":793,"mtime":1652547484000,"results":"22","hashOfConfig":"14"},{"size":1352,"mtime":1654648695064,"results":"23","hashOfConfig":"14"},{"size":123,"mtime":1654112888735,"results":"24","hashOfConfig":"14"},{"size":289,"mtime":1654190517912,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13ol57d",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/index.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/App.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/pages/SavedBooks.js",["52","53"],"import React, { useState } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\nimport { removeBookId } from '../utils/localStorage';\nimport Auth from \"../utils/auth\";\n\nconst SavedBooks = () => {\n  const profileData = Auth.getProfile();\n  const userId = profileData.data._id;\n  console.log(userId);\n\n  const userData = useQuery(GET_ME, {variables: {userId: userId}});\n  console.log(userData);\n  const data = userData.data || [];\n  const spread = {...data.user};\n\n  console.log(spread.username);\n  const [removeBook, {error}] = useMutation(REMOVE_BOOK);\n\n  const handleDeleteBook =async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n    \n    try {\n      const response = await removeBook({ variables: { userId: userId, bookId: bookId } });\n        console.log(response);\n        removeBookId(bookId);\n    } catch (err) {\n    console.error(err);\n  }\n\n  // if data isn't here yet, say so\n  if (!spread.username) {\n    return <h2>LOADING...</h2>;\n    }\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/pages/SearchBooks.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/components/Navbar.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/components/SignupForm.js",["54"],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  \n  const [addUser, { error }] = useMutation(ADD_USER);\n  \n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  \n  \n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n     try {\n      console.log(userFormData.username)\n      const {data} = await addUser(\n        {variables: { ...userFormData }\n    });\n    console.log(data)\n    \n      Auth.login(data.addUser.token);\n    } catch (error) {\n      console.log(error);\n      console.error(error);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/components/LoginForm.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/auth.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/localStorage.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/mutations.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/API.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/queries.js",[],{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"59","line":20,"column":23,"nodeType":"57","messageId":"58","endLine":20,"endColumn":28},{"ruleId":"55","severity":1,"message":"59","line":11,"column":21,"nodeType":"57","messageId":"58","endLine":11,"endColumn":26},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used."]