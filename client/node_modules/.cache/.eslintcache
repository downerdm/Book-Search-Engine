[{"/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/index.js":"1","/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/App.js":"2","/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/components/Navbar.js":"3","/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/pages/SavedBooks.js":"4","/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/pages/SearchBooks.js":"5","/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/components/LoginForm.js":"6","/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/components/SignupForm.js":"7","/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/utils/API.js":"8","/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/utils/auth.js":"9","/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/utils/localStorage.js":"10","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/index.js":"11","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/App.js":"12","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/pages/SavedBooks.js":"13","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/pages/SearchBooks.js":"14","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/components/Navbar.js":"15","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/API.js":"16","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/components/SignupForm.js":"17","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/auth.js":"18","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/components/LoginForm.js":"19","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/localStorage.js":"20","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/mutations.js":"21"},{"size":266,"mtime":1652547484000,"results":"22","hashOfConfig":"23"},{"size":698,"mtime":1652547484000,"results":"24","hashOfConfig":"23"},{"size":2524,"mtime":1652547484000,"results":"25","hashOfConfig":"23"},{"size":2946,"mtime":1652547484000,"results":"26","hashOfConfig":"23"},{"size":4665,"mtime":1652547484000,"results":"27","hashOfConfig":"23"},{"size":2617,"mtime":1652547484000,"results":"28","hashOfConfig":"23"},{"size":3268,"mtime":1652547484000,"results":"29","hashOfConfig":"23"},{"size":1392,"mtime":1652547484000,"results":"30","hashOfConfig":"23"},{"size":1234,"mtime":1652547484000,"results":"31","hashOfConfig":"23"},{"size":793,"mtime":1652547484000,"results":"32","hashOfConfig":"23"},{"size":266,"mtime":1652547484000,"results":"33","hashOfConfig":"34"},{"size":961,"mtime":1654023661778,"results":"35","hashOfConfig":"34"},{"size":2946,"mtime":1652547484000,"results":"36","hashOfConfig":"34"},{"size":4804,"mtime":1654111852518,"results":"37","hashOfConfig":"34"},{"size":2524,"mtime":1652547484000,"results":"38","hashOfConfig":"34"},{"size":1392,"mtime":1652547484000,"results":"39","hashOfConfig":"34"},{"size":3377,"mtime":1654111744452,"results":"40","hashOfConfig":"34"},{"size":1234,"mtime":1652547484000,"results":"41","hashOfConfig":"34"},{"size":2620,"mtime":1654111634598,"results":"42","hashOfConfig":"34"},{"size":793,"mtime":1652547484000,"results":"43","hashOfConfig":"34"},{"size":1317,"mtime":1654023305479,"results":"44","hashOfConfig":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vh1ldc",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13ol57d",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/index.js",[],"/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/App.js",[],"/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/components/Navbar.js",[],"/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/pages/SavedBooks.js",[],"/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/pages/SearchBooks.js",[],"/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/components/LoginForm.js",[],"/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/components/SignupForm.js",[],"/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/utils/API.js",[],"/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/utils/auth.js",[],"/Volumes/GoogleDrive/My Drive/Class_Code/Homework/21-MERN-02-Challenge_BookSearchEngine/Develop/client/src/utils/localStorage.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/index.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/App.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/pages/SavedBooks.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/pages/SearchBooks.js",["90"],"import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport { useMutation } from '@apollo/client';\nimport { SAVE_BOOK } from '../utils/mutations';\nimport { searchGoogleBooks } from '../utils/API';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBook(bookToSave, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/components/Navbar.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/API.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/components/SignupForm.js",["91","92"],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addUser, { data, error }] = useMutation(ADD_USER);\n  \n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await addUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/auth.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/components/LoginForm.js",["93","94"],"// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [login, { data, error }] = useMutation(LOGIN_USER)\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const {data} = await login(\n        {variables: {userFormData}}\n        );\n      Auth.login(data.loginUser.token);\n            \n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/localStorage.js",[],"/Users/dennisdowner/Documents/GT_Bootcamp/21-MERN/Book-Search-Engine/client/src/utils/mutations.js",[],{"ruleId":"95","severity":1,"message":"96","line":17,"column":22,"nodeType":"97","messageId":"98","endLine":17,"endColumn":27},{"ruleId":"95","severity":1,"message":"99","line":15,"column":21,"nodeType":"97","messageId":"98","endLine":15,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":15,"column":27,"nodeType":"97","messageId":"98","endLine":15,"endColumn":32},{"ruleId":"95","severity":1,"message":"99","line":13,"column":19,"nodeType":"97","messageId":"98","endLine":13,"endColumn":23},{"ruleId":"95","severity":1,"message":"96","line":13,"column":25,"nodeType":"97","messageId":"98","endLine":13,"endColumn":30},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used."]